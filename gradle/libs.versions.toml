[versions]
spring = "6.5.1"
spring-boot = "3.5.3"
spring-dependency-management = "1.1.7"
postgres-sql = "42.7.6"
hibernate = "7.0.2.Final"
ehcache = "3.10.8"
lombok = "1.18.38"
liquibase = "4.32.0"
liquibase-plugin = "2.2.2"
picocli = "4.7.7"
jjwt = "0.12.6"
testcontainers = "1.21.3"
junit-vintage-engine = "6.0.0-M1"



[libraries]
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "spring-boot"}
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot"}
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot"}
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot"}
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring"}
postgresql-driver = { module = "org.postgresql:postgresql", version.ref = "postgres-sql"}
hibernate-jcache = { module = "org.hibernate.orm:hibernate-jcache", version.ref = "hibernate"}
hibernate-commons-annotations = { module = "org.hibernate.common:hibernate-commons-annotations", version.ref="hibernate"}
ehcache = { module = "org.ehcache:ehcache", version.ref = "ehcache" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
liquibase = { module = "org.liquibase:liquibase-core", version.ref = "liquibase"}
picocli = { module = "info.picocli:picocli", version.ref = "picocli"}
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt"}
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt"}
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt"}
testcontainer-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers"}
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers"}
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers"}
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit-vintage-engine"}

[bundles]
spring = ["spring-boot-starter", "spring-boot-starter-data-jpa", "spring-boot-starter-aop", "spring-boot-starter-web",
    "spring-boot-starter-validation", "spring-boot-starter-data-mongodb", "spring-boot-starter-security"]
database = ["postgresql-driver", "hibernate-jcache", "ehcache", "hibernate-commons-annotations"]
test = ["spring-boot-starter-test", "spring-security-test", "testcontainer-core", "testcontainers-junit-jupiter",
    "testcontainers-postgresql", "junit-vintage-engine"]
liquibase = ["liquibase", "postgresql-driver", "picocli"]
jwt = ["jjwt-api", "jjwt-impl", "jjwt-jackson"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot"}
io-spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management"}
liquibase-gradle = { id = "org.liquibase.gradle", version.ref = "liquibase-plugin"}